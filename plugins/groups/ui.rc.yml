- repo: itchyny/vim-cursorword
  on_event: CursorMoved
- repo: gcavallanti/vim-noscrollbar
- repo: vim-airline/vim-airline
  hook_add: |
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#fnamemod = ':t'
    let g:airline#extensions#tabline#show_buffers = 0
    let g:airline#extensions#tabline#show_splits = 0
    nmap gb :bnext<CR>
    nmap gB :bprev<CR>

    let g:airline#extensions#branch#custom_head = 'gina#component#repo#branch'

    function! AirlineInit()
      if exists('*noscrollbar#statusline')
        call airline#parts#define_function('my-position', 'AirlinePosition')
        let g:airline_section_z = airline#section#create([substitute(g:airline_section_z, '%3p%%', airline#section#create(['my-position']), '')])
      end
    endfunction

    function! AirlinePosition()
      if winwidth(0) > 70
        return noscrollbar#statusline()
      else
        return line('.') * 100 / line('$') . '%'
      endif
    endfunction

    au User AirlineAfterInit call AirlineInit()
  hook_post_source: |
    function! airline#util#shorten(text, winwidth, minwidth, ...)
      if winwidth(0) < a:winwidth && len(split(a:text, '\zs')) > a:minwidth
        if get(a:000, 0, 0)
          " shorten from tail
          return '.'.matchstr(a:text, '.\{'.a:minwidth.'}$')
        else
          " shorten from beginning of string
          return matchstr(a:text, '^.\{'.a:minwidth.'}').'.'
        endif
      else
        return a:text
      endif
    endfunction

    function! airline#parts#filetype()
      return winwidth(0) < 90 && strlen(&filetype) > 3 ? matchstr(&filetype, '...'). (&encoding is? 'utf-8' ? '.' : '>') : &filetype
    endfunction

- repo: Yggdroot/indentLine
  hook_add: |
    let g:indentLine_fileTypeExclude = [
      \  '',
      \  'defx',
      \  'json',
      \  'vimfiler',
      \  'unite',
      \  'tagbar',
      \  'gina-status',
      \  'gina-grep',
      \  'gina-branch',
      \  'gina-log',
      \]
    let g:indentLine_concealcursor = ''
    let g:indentLine_conceallevel = 1
    let g:indentLine_faster = 1
    if !g:env#x
      let g:indentLine_color_term = 8
    endif
- repo: drmikehenry/vim-fontsize
  on_map: <Plug>Fontsize
  gui: 1
  hook_add: |
    nmap <silent> <C-ScrollWheelUp>   <Plug>FontsizeInc
    nmap <silent> <C-ScrollWheelDown> <Plug>FontsizeDec
    call MenuGroupAdd('fontsize', 'Fontsize', [
      \  ['FontsizeBegin', '<Plug>FontsizeBegin'],
      \  ['FontsizeInc', '<Plug>FontsizeInc'],
      \  ['FontsizeDec', '<Plug>FontsizeDec'],
      \  ['FontsizeDefault', '<Plug>FontsizeDefault'],
      \])
- repo: jszakmeister/vim-togglecursor
  if: '! g:env#gui'
- repo: equalsraf/neovim-gui-shim
  if: g:env#nvim
- repo: simeji/winresizer
  hook_add: |
    let g:winresizer_start_key = '<C-w><Space>'
