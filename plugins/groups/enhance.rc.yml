- repo: mhinz/vim-startify
  hook_add: |
    set sessionoptions=curdir,folds,help,resize,tabpages,unix
    let g:startify_session_dir = $HOME.'/.record/vim-sessions'
    let g:startify_session_autoload = 1
    let g:startify_session_delete_buffers = 1
    let g:startify_session_persistence = 1
    let g:startify_custom_header = [
      \ 'Raidou vim',
      \ ]
    let g:startify_bookmarks = [
      \ $MYVIMRC,
      \ $MY_PLUGINS,
      \ ]
    let g:startify_list_order = [
      \ ['   Vimfile:'],
      \ 'bookmarks',
      \ ['   Sessions:'],
      \ 'sessions',
      \ ['   Last Recently Use:'],
      \ 'files',
      \ ]
- repo: kshenoy/vim-signature
  hook_add: let g:SignatureErrorIfNoAvailableMarks = 0
# - repo: craigemery/vim-autotag
- repo: gioele/vim-autoswap
- repo: tpope/vim-repeat
- repo: vim-scripts/LargeFile
- repo: jiangmiao/auto-pairs
  hook_add: |
    # let g:AutoPairsFlyMode = 1
    # let g:AutoPairsMapSpace = 0
    let g:AutoPairsMultilineClose = 0
    let g:AutoPairs = {
      \ '(': ')',
      \ '[': ']',
      \ "'": "'",
      \ '"': '"',
      \ '`': '`',
      \ '{': '}'}
    map <Leader>ap <a-p>
# - repo: cohama/lexima.vim
#   hook_add: |
#     nmap o A<CR>
#     imap <C-h> <BS>
#     cmap <C-h> <BS>
#     let g:lexima_enable_basic_rules = 0
# - repo: tpope/vim-endwise
#   on_ft: ['ruby', 'lua', 'c', 'cpp', 'shell', 'zsh', 'bash']
#   hook_add: |
#     let g:endwise_abbreviations = 1
#     nmap o A<CR>
- repo: luochen1990/rainbow # lisp heightlight ()
- repo: AndrewRadev/splitjoin.vim
  on_map: ['gS', 'gJ']
- repo: osyo-manga/vim-jplus
  on_map: '<Plug>(jplus'
  hook_add: |
    nmap J <Plug>(jplus)
    vmap J <Plug>(jplus)
    nmap <Leader>J <Plug>(jplus-getchar)
    vmap <Leader>J <Plug>(jplus-getchar)


- repo: haya14busa/incsearch.vim
  hook_add: |
    map /  <Plug>(incsearch-forward)
    map ?  <Plug>(incsearch-backward)
    map g/ <Plug>(incsearch-stay)
    set hlsearch
    let g:incsearch#auto_nohlsearch = 1
    # map n  <Plug>(incsearch-nohl-n)
    # map N  <Plug>(incsearch-nohl-N)
    let g:incsearch#highlight = {
      \   'on_cursor': {
      \     'priority': '100'
      \   },
      \   'cursor': {
      \     'group': 'ErrorMsg',
      \     'priority': '1000'
      \   }
      \ }
- repo: haya14busa/incsearch-fuzzy.vim
  hook_add: |
    function! s:config_fuzzyall(...) abort
      return extend(copy({
      \   'converters': [
      \     incsearch#config#fuzzy#converter(),
      \     incsearch#config#fuzzyspell#converter()
      \   ],
      \ }), get(a:, 1, {}))
    endfunction
    noremap <silent><expr> z/ incsearch#go(<SID>config_fuzzyall())
    noremap <silent><expr> z? incsearch#go(<SID>config_fuzzyall({'command': '?'}))
    noremap <silent><expr> zg? incsearch#go(<SID>config_fuzzyall({'is_stay': 1}))
- repo: haya14busa/incsearch-easymotion.vim
  hook_add: |
    function! s:config_easyfuzzymotion(...) abort
      return extend(copy({
        \   'converters': [incsearch#config#fuzzy#converter()],
        \   'modules': [incsearch#config#easymotion#module()],
        \   'keymap': {"\<CR>": '<Over>(easymotion)'},
        \   'is_expr': 0,
        \   'is_stay': 1
        \ }), get(a:, 1, {}))
    endfunction
    noremap <silent><expr> <Space>/ incsearch#go(<SID>config_easyfuzzymotion())
- repo: haya14busa/vim-asterisk
  hook_add: |
    map *  <Plug>(asterisk-z*)
    map #  <Plug>(asterisk-z#)
    map g*  <Plug>(asterisk-g*)
    map g#  <Plug>(asterisk-g#)
    let g:asterisk#keeppos = 1
- repo: osyo-manga/vim-over
  on_cmd: 'OverCommandLine'
- repo: osyo-manga/vim-anzu
  on_map: '<Plug>(anzu-'
  hook_add: |
    nmap n <Plug>(anzu-n-with-echo)
    nmap N <Plug>(anzu-N-with-echo)

- repo: thinca/vim-ref
  on_cmd: Ref
  on_map: <Plug>(ref-keyword)
  hook_add: |
    let g:ref_phpmanual_path = expand('~/document/ref/php-chunked-xhtml/')
    map K <Plug>(ref-keyword)
- repo: matze/vim-move
  on_map: ['<M-k>', '<M-j>']
  hook_add: |
    let g:move_key_modifier = 'M'
    let g:move_auto_indent = 0
    map <S-Up> <M-k>
    map <S-Down> <M-j>

- repo: tpope/vim-characterize
  on_map: ga

- repo: weirongxu/vim-leader-guide
  hook_add: |
    map <leader>. <Plug>leaderguide-global
    map <space><space> :<c-u>LeaderGuide '<Space>'<CR>
    vmap <space><space> :<c-u>LeaderGuideVisual '<Space>'<CR>

- repo: tyru/caw.vim
  on_map: gc
  depends: context_filetype.vim
  merged: 0
  hook_add: |
    let g:caw_dollarpos_sp_left = '  '
    map <c-/> <Plug>(caw:hatpos:toggle)
    Inc /plugins-conf/caw
